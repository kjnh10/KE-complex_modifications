{
    "title": "Personal rules (@yqrashawn)",
    "rules": [
        {
            "description": "Alfred Mode",
            "manipulators": [

                <%# -------------------------------------------------- %>
                <%# z as Alfred Mode trigger %>
                <%# -------------------------------------------------- %>

                {
                    "type": "basic",
                    "from": <%= from("z", [], ["caps_lock"]) %>,
                    "to": [
                        { "set_variable": { "name": "alf_mode", "value": 1 } }
                    ],
                    "to_after_key_up": [
                        { "set_variable": { "name": "alf_mode", "value": 0 } }
                    ],
                    "to_if_alone": <%= to([["z"]]) %>
                },

                <%# ------------------------------- %>
                <%# z+y to hyper+equal_sign for youdao%>

                {
                    "type": "basic",
                    "from": <%= from("y", [], ["caps_lock"]) %>,
                    "to": <%= to([["equal_sign", ["left_command", "left_control", "left_option", "left_shift"]]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "alf_mode", "value": 1 }
                    ]
                },

                <%# z+j to search github%>

                {
                    "type": "basic",
                    "from": <%= from("j", [], ["caps_lock"]) %>,
                    "to": [
                        { "shell_command": "osascript -e 'tell application \"Alfred 3\" to run trigger \"searchGithub\" in workflow \"nikivi.search-the-web\" with argument \"\"'" }
                    ],
                    "conditions": [
                        { "type": "variable_if", "name": "alf_mode", "value": 1 }
                    ]
                },

                <%# z+tab to switch iTerm session%>

                {
                    "type": "basic",
                    "from": <%= from("tab", [], ["caps_lock"]) %>,
                    "to": [
                        { "shell_command": "osascript -e 'tell application \"Alfred 3\" to run trigger \"iTermtty\" in workflow \"net.isometry.alfred.tty\" with argument \"\"'" }
                    ],
                    "conditions": [
                        { "type": "variable_if", "name": "alf_mode", "value": 1 }
                    ]
                },

                <%# z+x to kill process%>

                {
                    "type": "basic",
                    "from": <%= from("x", [], ["caps_lock"]) %>,
                    "to": [
                        { "shell_command": "osascript -e 'tell application \"Alfred 3\" to run trigger \"killProcess\" in workflow \"com.ngreenstein.alfred-process-killer\" with argument \"\"'" }
                    ],
                    "conditions": [
                        { "type": "variable_if", "name": "alf_mode", "value": 1 }
                    ]
                },

                <%# z+t to open any repo in select application%>

                {
                    "type": "basic",
                    "from": <%= from("t", [], ["caps_lock"]) %>,
                    "to": [
                        { "shell_command": "osascript -e 'tell application \"Alfred 3\" to run trigger \"repos\" in workflow \"net.deanishe.alfred-git-repos\" with argument \"\"'" }
                    ],
                    "conditions": [
                        { "type": "variable_if", "name": "alf_mode", "value": 1 }
                    ]
                },

                <%# z+k to search browser history%>

                {
                    "type": "basic",
                    "from": <%= from("k", [], ["caps_lock"]) %>,
                    "to": [
                        { "shell_command": "osascript -e 'tell application \"Alfred 3\" to run trigger \"chromeHistory\" in workflow \"thomasupton.chrome-history\" with argument \"\"'" }
                    ],
                    "conditions": [
                        { "type": "variable_if", "name": "alf_mode", "value": 1 }
                    ]
                },

                <%# z+b to switch brower tab%>

                {
                    "type": "basic",
                    "from": <%= from("b", [], ["caps_lock"]) %>,
                    "to": [
                        { "shell_command": "osascript -e 'tell application \"Alfred 3\" to run trigger \"browserTabs\" in workflow \"com.clintonstrong.SearchTabs\" with argument \"\" '" }
                    ],
                    "conditions": [
                        { "type": "variable_if", "name": "alf_mode", "value": 1 }
                    ]
                },

                <%# z+r to open recent download files%>

                {
                    "type": "basic",
                    "from": <%= from("r", [], ["caps_lock"]) %>,
                    "to": [
                        { "shell_command": "osascript -e 'tell application \"Alfred 3\" to run trigger \"recentDownloads\" in workflow \"com.vitorgalvao.alfred.recentdownloads\" with argument \"\"'" }
                    ],
                    "conditions": [
                        { "type": "variable_if", "name": "alf_mode", "value": 1 }
                    ]
                },

                <%# z+l only in finder to triger Alfred file action: left_command+left_control+slash%>

                {
                    "type": "basic",
                    "from": <%= from("l", [], ["caps_lock"]) %>,
                    "to": <%= to([["slash", ["left_command", "left_control"]]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "alf_mode", "value": 1 },
                        <%= frontmost_application_if("finder") %>

                    ]
                },

                <%# z+l only in browers open devtool: command+option+i%>

                {
                    "type": "basic",
                    "from": <%= from("l", [], ["caps_lock"]) %>,
                    "to": <%= to([["i", ["left_command", "left_option"]]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "alf_mode", "value": 1 },
                        <%= frontmost_application_if("browser") %>

                    ]
                },

                <%# z+o to copy selection into emacs: hyper+0%>

                {
                    "type": "basic",
                    "from": <%= from("o", [], ["caps_lock"]) %>,
                    "to": <%= to([["0", ["left_command", "left_control", "left_option", "left_shift"]]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "alf_mode", "value": 1 }
                    ]
                },

                <%# z+p to pase saved emacs buffer back to front most app%>

                {
                    "type": "basic",
                    "from": <%= from("p", [], ["caps_lock"]) %>,
                    "to": [
                        { "shell_command": "osascript -e 'tell application \"Alfred 3\" to run trigger \"pasteBack\" in workflow \"yqrashawn.com.ewe\" with argument \"\"'" }
                    ],
                    "conditions": [
                        { "type": "variable_if", "name": "alf_mode", "value": 1 }
                    ]
                },

                <%# z+; to open localhost page in browser%>

                {
                    "type": "basic",
                    "from": <%= from("semicolon", [], ["caps_lock"]) %>,
                    "to": [
                        { "shell_command": "osascript -e 'tell application \"Alfred 3\" to run trigger \"localport\" in workflow \"in.fech.localport\" with argument \"\" '" }
                    ],
                    "conditions": [
                        { "type": "variable_if", "name": "alf_mode", "value": 1 }
                    ]
                },
                <%# z+q to start recording macro in Keyboard Maestro%>

                {
                    "type": "basic",
                    "from": <%= from("q", [], ["caps_lock"]) %>,
                    "to": [
                        { "shell_command": "osascript -e 'tell application \"Keyboard Maestro Engine\" to do script \"Quick Macro 1\"'" }
                    ],
                    "conditions": [
                        { "type": "variable_if", "name": "alf_mode", "value": 1 }
                    ]
                },

                <%# z+close_bracket to execute latest macro in Keyboard Maestro%>

                {
                    "type": "basic",
                    "from": <%= from("close_bracket", [], []) %>,
                    "to": <%= to([["close_bracket", ["left_command", "left_control", "left_option", "left_shift"]]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "alf_mode", "value": 1 }
                    ]
                },

                <%# some high frequency keychords need fix%>

                {
                    "type": "basic",
                    "from": <%= from("a", [], []) %>,
                    "to": <%= to([["z"], ["a"]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "alf_mode", "value": 1 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("h", [], []) %>,
                    "to": <%= to([["z"], ["h"]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "alf_mode", "value": 1 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("i", [], []) %>,
                    "to": <%= to([["z"], ["i"]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "alf_mode", "value": 1 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("l", [], []) %>,
                    "to": <%= to([["z"], ["l"]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "alf_mode", "value": 1 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("u", [], []) %>,
                    "to": <%= to([["z"], ["u"]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "alf_mode", "value": 1 }
                    ]
                }
            ]
        },
        {
            "description": "yq Launch Mode",
            "manipulators": [

                <%# -------------------------------------------------- %>
                <%# w as yq Launch Mode trigger %>
                <%# -------------------------------------------------- %>

                {
                    "type": "basic",
                    "from": <%= from("w", [], ["caps_lock"]) %>,
                    "to": [
                        { "set_variable": { "name": "launch_mode", "value": 1 } }
                    ],
                    "to_after_key_up": [
                        { "set_variable": { "name": "launch_mode", "value": 0 } }
                    ],
                    "to_if_alone": <%= to([["w"]]) %>
                },

                <%# -------------------------------------------------- %>
                <%# close_bracket as yq Launch Mode Second Level trigger %>
                <%# -------------------------------------------------- %>

                {
                    "type": "basic",
                    "from": <%= from("open_bracket", [], ["caps_lock"]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "launch_mode", "value": 1 }
                    ],
                    "to": [
                        { "set_variable": { "name": "launch_mode_second_level", "value": 1 } }
                    ],
                    "to_after_key_up": [
                        { "set_variable": { "name": "launch_mode_second_level", "value": 0 } }
                    ],
                    "to_if_alone": <%= to([["vk_none"]]) %>
                },

                <%# w+j bring iTerm%>

                {
                    "type": "basic",
                    "from": <%= from("j", [], ["caps_lock"]) %>,
                    "to": [
                        { "shell_command": "osascript -e ' tell application \"Alfred 3\" to run trigger \"launchiTerm\" in workflow \"yqrashawn.workflow.launcher\" with argument \"\"'" }
                    ],
                    "conditions": [
                        { "type": "variable_if", "name": "launch_mode", "value": 1 },
                        { "type": "variable_if", "name": "launch_mode_second_level", "value": 0 }
                    ]
                },

                <%# w+v bring WeChat%>

                {
                    "type": "basic",
                    "from": <%= from("v", [], ["caps_lock"]) %>,
                    "to": [
                        { "shell_command": "osascript -e ' tell application \"Alfred 3\" to run trigger \"launchWeChat\" in workflow \"yqrashawn.workflow.launcher\" with argument \"\"'" }
                    ],
                    "conditions": [
                        { "type": "variable_if", "name": "launch_mode", "value": 1 },
                        { "type": "variable_if", "name": "launch_mode_second_level", "value": 0 }
                    ]
                },

                <%# w+l bring Google Chrome%>

                {
                    "type": "basic",
                    "from": <%= from("l", [], ["caps_lock"]) %>,
                    "to": [
                        { "shell_command": "osascript -e ' tell application \"Alfred 3\" to run trigger \"launchChrome\" in workflow \"yqrashawn.workflow.launcher\" with argument \"\"'" }
                    ],
                    "conditions": [
                        { "type": "variable_if", "name": "launch_mode", "value": 1 },
                        { "type": "variable_if", "name": "launch_mode_second_level", "value": 0 }
                    ]
                },

                <%# w+c bring Safari%>

                {
                    "type": "basic",
                    "from": <%= from("c", [], ["caps_lock"]) %>,
                    "to": [
                        { "shell_command": "osascript -e ' tell application \"Alfred 3\" to run trigger \"launchSafari\" in workflow \"yqrashawn.workflow.launcher\" with argument \"\"'" }
                    ],
                    "conditions": [
                        { "type": "variable_if", "name": "launch_mode", "value": 1 },
                        { "type": "variable_if", "name": "launch_mode_second_level", "value": 0 }
                    ]
                },

                <%# w+t bring Tower%>

                {
                    "type": "basic",
                    "from": <%= from("t", [], ["caps_lock"]) %>,
                    "to": [
                        { "shell_command": "osascript -e ' tell application \"Alfred 3\" to run trigger \"launchTower\" in workflow \"yqrashawn.workflow.launcher\" with argument \"\"'" }
                    ],
                    "conditions": [
                        { "type": "variable_if", "name": "launch_mode", "value": 1 },
                        { "type": "variable_if", "name": "launch_mode_second_level", "value": 0 }
                    ]
                },

                <%# w+m bring Mail%>

                {
                    "type": "basic",
                    "from": <%= from("m", [], ["caps_lock"]) %>,
                    "to": [
                        { "shell_command": "osascript -e ' tell application \"Alfred 3\" to run trigger \"launchMail\" in workflow \"yqrashawn.workflow.launcher\" with argument \"\"'" }
                    ],
                    "conditions": [
                        { "type": "variable_if", "name": "launch_mode", "value": 1 },
                        { "type": "variable_if", "name": "launch_mode_second_level", "value": 0 }
                    ]
                },

                <%# w+b bring bearychat%>

                {
                    "type": "basic",
                    "from": <%= from("b", [], ["caps_lock"]) %>,
                    "to": [
                        { "shell_command": "osascript -e ' tell application \"Alfred 3\" to run trigger \"launchBearyChat\" in workflow \"yqrashawn.workflow.launcher\" with argument \"\"'" }
                    ],
                    "conditions": [
                        { "type": "variable_if", "name": "launch_mode", "value": 1 },
                        { "type": "variable_if", "name": "launch_mode_second_level", "value": 0 }
                    ]
                },

                <%# w+k bring Emacs%>

                {
                    "type": "basic",
                    "from": <%= from("k", [], ["caps_lock"]) %>,
                    "to": [
                        { "shell_command": "osascript -e ' tell application \"Alfred 3\" to run trigger \"launchEmacs\" in workflow \"yqrashawn.workflow.launcher\" with argument \"\"'" }
                    ],
                    "conditions": [
                        { "type": "variable_if", "name": "launch_mode", "value": 1 },
                        { "type": "variable_if", "name": "launch_mode_second_level", "value": 0 }
                    ]
                },

                <%# w+f bring Finder%>

                {
                    "type": "basic",
                    "from": <%= from("f", [], ["caps_lock"]) %>,
                    "to": [
                        { "shell_command": "osascript -e ' tell application \"Alfred 3\" to run trigger \"launchFinder\" in workflow \"yqrashawn.workflow.launcher\" with argument \"\"'" }
                    ],
                    "conditions": [
                        { "type": "variable_if", "name": "launch_mode", "value": 1 },
                        { "type": "variable_if", "name": "launch_mode_second_level", "value": 0 }
                    ]
                },

                <%# w+q bring KE%>

                {
                    "type": "basic",
                    "from": <%= from("q", [], ["caps_lock"]) %>,
                    "to": [
                        { "shell_command": "osascript -e ' tell application \"Alfred 3\" to run trigger \"launchKE\" in workflow \"yqrashawn.workflow.launcher\" with argument \"\"'" }
                    ],
                    "conditions": [
                        { "type": "variable_if", "name": "launch_mode", "value": 1 },
                        { "type": "variable_if", "name": "launch_mode_second_level", "value": 0 }
                    ]
                },

                <%# w+close_barcket+q bring KE Events%>

                {
                    "type": "basic",
                    "from": <%= from("q", [], ["caps_lock"]) %>,
                    "to": [
                        { "shell_command": "osascript -e ' tell application \"Alfred 3\" to run trigger \"launchKEEvents\" in workflow \"yqrashawn.workflow.launcher\" with argument \"\"'" }
                    ],
                    "conditions": [
                        { "type": "variable_if", "name": "launch_mode", "value": 1 },
                        { "type": "variable_if", "name": "launch_mode_second_level", "value": 1 }
                    ]
                },

                <%# w+close_bracket+r bring Reeder%>

                {
                    "type": "basic",
                    "from": <%= from("r", [], ["caps_lock"]) %>,
                    "to": [
                        { "shell_command": "osascript -e 'tell application \"Alfred 3\" to run trigger \"launchReeder\" in workflow \"yqrashawn.workflow.launcher\" with argument \"\"'" }
                    ],
                    "conditions": [
                        { "type": "variable_if", "name": "launch_mode", "value": 1 },
                        { "type": "variable_if", "name": "launch_mode_second_level", "value": 1 }
                    ]
                },

                <%# some high frequency keychords need fix%>

                {
                    "type": "basic",
                    "from": <%= from("a", [], []) %>,
                    "to": <%= to([["w"], ["a"]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "launch_mode", "value": 1 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("e", [], []) %>,
                    "to": <%= to([["w"], ["e"]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "launch_mode", "value": 1 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("h", [], []) %>,
                    "to": <%= to([["w"], ["h"]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "launch_mode", "value": 1 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("i", [], []) %>,
                    "to": <%= to([["w"], ["i"]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "launch_mode", "value": 1 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("o", [], []) %>,
                    "to": <%= to([["w"], ["o"]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "launch_mode", "value": 1 }
                    ]
                },

                <%# -------------------------------------------------- %>
                <%# drop other keys in lanuch mode second level %>
                <%# -------------------------------------------------- %>
                {
                    "description": "drop other keys",
                    "type": "basic",
                    "from": {
                        "any": "key_code",
                        "modifiers": { "optional": [ "any" ] }
                    },
                    "to": <%= to([["vk_none"]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "launch_mode_second_level", "value": 1 }
                    ]
                }
            ]
        },
        {
            "description": "Quick Insert Mode",
            "manipulators": [

                <%# -------------------------------------------------- %>
                <%# period as Quick Insert Mode trigger %>
                <%# -------------------------------------------------- %>

                {
                    "type": "basic",
                    "from": <%= from("period", [], ["caps_lock"]) %>,
                    "to": [
                        { "set_variable": { "name": "qi_mode", "value": 1 } }
                    ],
                    "to_after_key_up": [
                        { "set_variable": { "name": "qi_mode", "value": 0 } }
                    ],
                    "to_if_alone": <%= to([["period"]]) %>
                },

                <%# -------------------------------------------------- %>
                <%# comma as Quick Insert Mode Second Level trigger %>
                <%# -------------------------------------------------- %>

                {
                    "type": "basic",
                    "from": <%= from("comma", [], ["caps_lock"]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "qi_mode", "value": 1 }
                    ],
                    "to": [
                        { "set_variable": { "name": "qi_mode_second_level", "value": 1 } }
                    ],
                    "to_after_key_up": [
                        { "set_variable": { "name": "qi_mode_second_level", "value": 0 } }
                    ],
                    "to_if_alone": <%= to([["comma"]]) %>
                },

                <%# period+tab switch to second previouse visited buffer in emacs%>

                {
                    "type": "basic",
                    "from": <%= from("tab", [], ["caps_lock"]) %>,
                    "to": <%= to([["tab", ["left_control"]]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "qi_mode", "value": 1 },
                        { "type": "variable_if", "name": "qi_mode_second_level", "value": 0 },
                        <%= frontmost_application_if("emacs") %>
                    ]
                },

                <%# period+comma+tab back switch to second previouse visited buffer in emacs%>

                {
                    "type": "basic",
                    "from": <%= from("tab", [], ["caps_lock"]) %>,
                    "to": <%= to([["tab", ["left_control", "left_shift"]]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "qi_mode", "value": 1 },
                        { "type": "variable_if", "name": "qi_mode_second_level", "value": 1 },
                        <%= frontmost_application_if("emacs") %>
                    ]
                },

                <%# period+a insert ~/ %>

                {
                    "type": "basic",
                    "from": <%= from("a", [], ["caps_lock"]) %>,
                    "to": <%= to([["grave_accent_and_tilde", ["left_shift"]], ["slash"]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "qi_mode", "value": 1 },
                        { "type": "variable_if", "name": "qi_mode_second_level", "value": 0 }
                    ]
                },

                <%# period+s insert .*%>

                {
                    "type": "basic",
                    "from": <%= from("s", [], ["caps_lock"]) %>,
                    "to": <%= to([["period"], ["8",["left_shift"]]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "qi_mode", "value": 1 },
                        { "type": "variable_if", "name": "qi_mode_second_level", "value": 0 }
                    ]
                },

                <%# period+e insert left parentheses %>

                {
                    "type": "basic",
                    "from": <%= from("e", [], ["caps_lock"]) %>,
                    "to": <%= to([["9", ["left_shift"]]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "qi_mode", "value": 1 },
                        { "type": "variable_if", "name": "qi_mode_second_level", "value": 0 }
                    ]
                },

                <%# period+r insert right parentheses %>

                {
                    "type": "basic",
                    "from": <%= from("r", [], ["caps_lock"]) %>,
                    "to": <%= to([["0", ["left_shift"]]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "qi_mode", "value": 1 },
                        { "type": "variable_if", "name": "qi_mode_second_level", "value": 0 }
                    ]
                },

                <%# period+q insert open curly braces %>

                {
                    "type": "basic",
                    "from": <%= from("q", [], ["caps_lock"]) %>,
                    "to": <%= to([["open_bracket", ["left_shift"]]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "qi_mode", "value": 1 },
                        { "type": "variable_if", "name": "qi_mode_second_level", "value": 0 }
                    ]
                },

                <%# period+comma+q insert close curly braces %>

                {
                    "type": "basic",
                    "from": <%= from("q", [], ["caps_lock"]) %>,
                    "to": <%= to([["close_bracket", ["left_shift"]]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "qi_mode", "value": 1 },
                        { "type": "variable_if", "name": "qi_mode_second_level", "value": 1 }
                    ]
                },

                <%# period+slash insert ./ %>

                {
                    "type": "basic",
                    "from": <%= from("slash", [], ["caps_lock"]) %>,
                    "to": <%= to([["period"], ["slash"]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "qi_mode", "value": 1 },
                        { "type": "variable_if", "name": "qi_mode_second_level", "value": 0 }
                    ]
                },

                <%# period+g to Alfred Clipboard: left_command+left_control+k%>

                {
                    "type": "basic",
                    "from": <%= from("g", [], ["caps_lock"]) %>,
                    "to": <%= to([["k", ["left_command", "left_control"]]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "qi_mode", "value": 1 },
                        { "type": "variable_if", "name": "qi_mode_second_level", "value": 0 }
                    ]
                },

                <%# period+d macOS define: left_command+left_control+d%>

                {
                    "type": "basic",
                    "from": <%= from("d", [], ["caps_lock"]) %>,
                    "to": <%= to([["d", ["left_command", "left_control"]]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "qi_mode", "value": 1 },
                        { "type": "variable_if", "name": "qi_mode_second_level", "value": 0 }
                    ]
                },

                <%# -------------------------------------------------- %>
                <%# drop other keys in qi_mode_second_level mode %>
                <%# -------------------------------------------------- %>
                {
                    "description": "drop other keys",
                    "type": "basic",
                    "from": {
                        "any": "key_code",
                        "modifiers": { "optional": [ "any" ] }
                    },
                    "to": <%= to([["vk_none"]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "qi_mode_second_level", "value": 1 }
                    ]
                }
            ]
        },
        {
            "description": "Slash Mode",
            "manipulators": [

                <%# -------------------------------------------------- %>
                <%# slash as Slash Mode trigger %>
                <%# -------------------------------------------------- %>

                {
                    "type": "basic",
                    "from": <%= from("slash", [], ["caps_lock"]) %>,
                    "to": [
                        { "set_variable": { "name": "slash_mode", "value": 1 } }
                    ],
                    "to_after_key_up": [
                        { "set_variable": { "name": "slash_mode", "value": 0 } }
                    ],
                    "to_if_alone": <%= to([["slash"]]) %>
                },

                <%# slash+tab switch to previouse application%>

                {
                    "type": "basic",
                    "from": <%= from("tab", [], ["caps_lock"]) %>,
                    "to": <%= to([["tab", ["left_command"]], ["left_command"]]) %>,
                    "conditions": [
                        { "type": "variable_if", "name": "slash_mode", "value": 1 }
                    ]
                }
            ]
        },
        {
            "description": "FILCO MINILA Swap grave_accent_and_tilde and backslash",
            "manipulators": [

                <%# backslash swap with grave_accent_and_tilde%>

                {
                    "type": "basic",
                    "from": <%= from("backslash", [], ["any"]) %>,
                    "conditions": [
                        {
                            "type": "device_if",
                            "identifiers": [
                                {
                                    "product_id": 34050,
                                    "vendor_id": 2652
                                }
                            ]
                        }
                    ],
                    "to": <%= to([["grave_accent_and_tilde"]]) %>
                },
                {
                    "type": "basic",
                    "from": <%= from("grave_accent_and_tilde", [], ["any"]) %>,
                    "conditions": [
                        {
                            "type": "device_if",
                            "identifiers": [
                                {
                                    "product_id": 34050,
                                    "vendor_id": 2652
                                }
                            ]
                        }
                    ],
                    "to": <%= to([["backslash"]]) %>
                }
            ]
        },
        {
            "description": "FILCO MINILA Change left command to left option, and f18 if alone",
            "manipulators": [

                <%#FILCO MINILA Change left command to left option, and f18 if alone%>

                {
                    "type": "basic",
                    "from": <%= from("left_command", [], ["any"]) %>,
                    "conditions": [
                        {
                            "type": "device_if",
                            "identifiers": [
                                {
                                    "product_id": 34050,
                                    "vendor_id": 2652
                                }
                            ]
                        }
                    ],
                    "to": <%= to([["left_option"]]) %>,
                    "to_if_alone": <%= to([["f18"]]) %>
                }
            ]
        },
        {
            "description": "FILCO MINILA Change left_option to f19 to left command, and 19 if alone",
            "manipulators": [

                <%#FILCO MINILA Change left_option to f19 to left command, and 19 if alone%>

                {
                    "type": "basic",
                    "from": <%= from("left_option", [], ["any"]) %>,
                    "conditions": [
                        {
                            "type": "device_if",
                            "identifiers": [
                                {
                                    "product_id": 34050,
                                    "vendor_id": 2652
                                }
                            ]
                        }
                    ],
                    "to": <%= to([["left_command"]]) %>,
                    "to_if_alone": <%= to([["f19"]]) %>
                }
            ]
        },
        {
            "description": "FILCO MINILA Change application to right option, and f17 when used alone",
            "manipulators": [

                <%#FILCO MINILA Change application to f17 when used alone%>

                {
                    "type": "basic",
                    "from": <%= from("application", [], ["any"]) %>,
                    "conditions": [
                        {
                            "type": "device_if",
                            "identifiers": [
                                {
                                    "product_id": 34050,
                                    "vendor_id": 2652
                                }
                            ]
                        }
                    ],
                    "to": <%= to([["right_option"]]) %>,
                    "to_if_alone": <%= to([["f17"]]) %>
                }
            ]
        },
        {
            "description": "FILCO MINILA Change right option to right command, and f16 when used alone",
            "manipulators": [

                <%#FILCO MINILA Change application to f17 when used alone%>

                {
                    "type": "basic",
                    "from": <%= from("right_option", [], ["any"]) %>,
                    "conditions": [
                        {
                            "type": "device_if",
                            "identifiers": [
                                {
                                    "product_id": 34050,
                                    "vendor_id": 2652
                                }
                            ]
                        }
                    ],
                    "to": <%= to([["right_command"]]) %>,
                    "to_if_alone": <%= to([["f16"]]) %>
                }
            ]
        },
        {
            "description": "HHKB, FILCO MINILA Change left control to esc if alone",
            "manipulators": [

                <%#HHKB, FILCO MINILA Change left control to esc if alone%>

                {
                    "type": "basic",
                    "from": <%= from("left_control", [], ["any"]) %>,
                    "conditions": [
                        {
                            "type": "device_if",
                            "identifiers": [
                                {
                                "product_id": 256,
                                "vendor_id": 2131
                                },
                                {
                                "product_id": 514,
                                "vendor_id": 1278
                                },
                                {
                                "product_id": 34050,
                                "vendor_id": 2652
                                }
                            ]
                        }
                    ],
                    "to": <%= to([["left_control"]]) %>,
                    "to_if_alone": <%= to([["escape"]]) %>
                }
            ]
        },
        {
            "description": "Change caps_lock to control when used as modifier, escape when used alone",
            "manipulators": [

                <%#Change caps_lock to control when used as modifier, escape when used alone%>

                {
                    "type": "basic",
                    "from": <%= from("caps_lock", [], ["any"]) %>,
                    "to": <%= to([["left_control"]]) %>,
                    "to_if_alone": <%= to([["escape"]]) %>
                }
            ]
        },
        {
            "description": "Change right_command to command-tab when used alone",
            "manipulators": [

                <%#Change right_command to command-tab when used alone%>

                {
                    "type": "basic",
                    "from": <%= from("right_command", [], ["any"]) %>,
                    "to": <%= to([["right_command"]]) %>,
                    "to_if_alone": <%= to([["tab", ["left_command"]]]) %>
                }
            ]
        },
        {
            "description": "Change left_command to f19 if alone",
            "manipulators": [

                <%#Change right_command to command-tab when used alone%>

                {
                    "type": "basic",
                    "from": <%= from("left_command", [], ["any"]) %>,
                    "to": <%= to([["left_command"]]) %>,
                    "to_if_alone": <%= to([["f19"]]) %>
                }
            ]
        },
        {
            "description": "Change left_option to f18 if alone",
            "manipulators": [

                <%#Change right_command to command-tab when used alone%>

                {
                    "type": "basic",
                    "from": <%= from("left_option", [], ["any"]) %>,
                    "to": <%= to([["left_option"]]) %>,
                    "to_if_alone": <%= to([["f18"]]) %>
                }
            ]
        },
        {
            "description": "Change right_option to f17 if alone",
            "manipulators": [

                <%#Change right_command to command-tab when used alone%>

                {
                    "type": "basic",
                    "from": <%= from("right_option", [], ["any"]) %>,
                    "to": <%= to([["right_option"]]) %>,
                    "to_if_alone": <%= to([["f17"]]) %>
                }
            ]
        },
        {
            "description": "Change right_command to f16 if alone",
            "manipulators": [

                <%#Change right_command to command-tab when used alone%>

                {
                    "type": "basic",
                    "from": <%= from("right_command", [], ["any"]) %>,
                    "to": <%= to([["right_command"]]) %>,
                    "to_if_alone": <%= to([["f16"]]) %>
                }
            ]
        }
    ]
}
